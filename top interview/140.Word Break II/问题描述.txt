Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, add spaces in s to construct a sentence where each word is a valid dictionary word. Return all such possible sentences.

Note:

The same word in the dictionary may be reused multiple times in the segmentation.
You may assume the dictionary does not contain duplicate words.
Example 1:

Input:
s = "catsanddog"
wordDict = ["cat", "cats", "and", "sand", "dog"]
Output:
[
  "cats and dog",
  "cat sand dog"
]
Example 2:

Input:
s = "pineapplepenapple"
wordDict = ["apple", "pen", "applepen", "pine", "pineapple"]
Output:
[
  "pine apple pen apple",
  "pineapple pen apple",
  "pine applepen apple"
]
Explanation: Note that you are allowed to reuse a dictionary word.
Example 3:

Input:
s = "catsandog"
wordDict = ["cats", "dog", "sand", "and", "cat"]
Output:
[]

问题分析：
和前一题一样的总体步骤，但是我们在判断当前位置可达时，我们需要记录到底是哪些位置到达的该位置。
最后，我们从最后一个位置倒推得到所有字符串。
比如：
s = "catsanddog"
wordDict = ["cat", "cats", "and", "sand", "dog"]

对于s，我们用长度为n + 1的数组记录每个位置是否可达。用另一个长度为n + 1的数组记录是哪些位置到达了当前位置。
0	1	2	3	4	5	6	7	8	9	10
	c	a	t	s	a	n	d	d	o	g
True	false	false	true	true	false	false	true	false	false	true
			<0>	<0>			<3,4>			<7>

最后我们从位置10逆推字符串。
