Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]

本题的重点其实是如何去重
（1）对数组进行排序
（2）找到所有的i，j，k。nums[i]+nums[j]+nums[k] = 0.但是需要去重

步骤：
（1）第一重循环：i由0到n-3。nums[i]代表第一个数
	（a）如果当前值和nums[i-1]相同，跳过（防止第一位重复）
（2）用l和r分别指向I+1和n-1.现在我们需要找到l和r
	（a）当l>i+1时，如果nums[l] == nums[l - 1]。l++,避免了第二个值的重复
	（b）当l<n-1时，如果nums[r] == nums[r + 1]。r—-,避免了第三个值的重复
	（c）计算sum = nums[l]+nums[r]+nums[i]
	（d）如果sum>0，则r—-
	（e）如果sum<0，则l++
	（f）如果sum==0，则r—-，l++。将三个值加入返回值