题目描述
输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组{3，32，321}，则打印出这三个数字能排成的最小数字为321323。

其实这道题考察的是对数排序,当然不是大小，而是按照本道题的逻辑设计排序。
我们很自然的想到：小的数字（0,1,2,3）在前面，大的数字(7，8，9)在后面。
所以我们确定两个数的先后顺序时，（由高到低）逐位比较，如果某一位不一致，那么较小的数字对应的数排在前面
比如31和322
3	1
3	2	2
显然31在322前面。
31322 < 32231
但是需要解决的一个问题是，如果两个数字一长一短，短的数字完全包含在长的数字中怎么办，比如32和324
此时我们注意到，两者构成的五位数前两位都是32，而剩下的三位数要么是432要么是324，所以我们可以看到问题转化成比较4和32.
从上面看，我们可以构建递归的cmp，从而对数组排序，然后组成最后的输出，为了计算方便，我们可以将int转化成string之后再排序。