Write a program to find the n-th ugly number.

Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. 

Example:

Input: n = 10
Output: 12
Explanation: 1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.
Note:  

1 is typically treated as an ugly number.
n does not exceed 1690.

问题分析：
我们其实可以挨个检查每个数是否为丑数，但是这样时间成本很高。
我们知道每个丑数都是之前的某个丑数*2,*3,*5得到的，所以我们可以存储之前的丑数来计算当前的丑数。
假设已有一个排好的丑数数组vec[1…n-1]，要求下一个丑数(n)。
一个蠢办法：遍历之前的所有数，让其分别乘以2，3，5.这样会得到一堆小于vec[n-1]或者等于vec[n-1]或者大于vec[n-1]的数，我们其实就是要在大于vec[n-1]中找最小。
假设我们已经找到了vec[n]。
如果vec[n]==vec[i] * 2，那显然vec[i + 1] * 2> vec[n]
如果vec[n]==vec[j] * 3，那显然vec[j + 1] * 3> vec[n]
如果vec[n]==vec[k] * 5，那显然vec[k + 1] * 5> vec[n]
所以我们可以用i,j,k记录满足这个条件的坐标，初始化为0，然后在每次生成vec[n]之后更新i,j,k。